<script src="/js/jquery-3.2.1.min.js"></script>
<script src="/js/jquery-ui.min.js"></script>
<script src="/js/moment.min.js"></script>
<script src="/js/bootstrap.min.js"></script>
<script src="/js/bootstrap-datetimepicker.min.js"></script>

<!--  <script src="js/seeds.js"></script> -->

<link rel="stylesheet" href="/css/jquery-ui.min.css">
<link rel="stylesheet" href="/css/bootstrap.min.css">
<link rel="stylesheet" href="/css/bootstrap-theme2.css">
<link rel="stylesheet" href="/css/autocomplete.css">
<link rel="stylesheet" href="/css/mvms_visitors_style.css">
<body class="ltblueback">

<div id="main2" class="container" style="height: 100vh;;">  <div class="center-content" hidden>
  <!-- face_detector_selection_control -->
  <div id="face_detector_selection_control" class="row input-field">
    <select id="selectFaceDetector">
      <option value="ssd_mobilenetv1">SSD Mobilenet V1</option>
      <option value="tiny_face_detector">Tiny Face Detector</option>
      <option value="mtcnn">MTCNN</option>
    </select>
    <label>Select Face Detector</label>
  </div>
  <!-- face_detector_selection_control -->

  <!-- ssd_mobilenetv1_controls -->
  <span id="ssd_mobilenetv1_controls">
        <div class="row side-by-side">
          <div class="row">
            <label for="minConfidence">Min Confidence:</label>
            <input disabled value="0.5" id="minConfidence" type="text" class="bold">
          </div>
          <button
            class="waves-effect waves-light btn"
            onclick="onDecreaseMinConfidence()"
          >
            <i class="material-icons left">-</i>
          </button>
          <button
            class="waves-effect waves-light btn"
            onclick="onIncreaseMinConfidence()"
          >
            <i class="material-icons left">+</i>
          </button>
        </div>
      </span>
  <!-- ssd_mobilenetv1_controls -->

  <!-- tiny_face_detector_controls -->
  <span id="tiny_face_detector_controls">
        <div class="row side-by-side">
          <div class="row input-field" style="margin-right: 20px;">
            <select id="inputSize">
              <option value="" disabled selected>Input Size:</option>
              <option value="160">160 x 160</option>
              <option value="224">224 x 224</option>
              <option value="320">320 x 320</option>
              <option value="416">416 x 416</option>
              <option value="512">512 x 512</option>
              <option value="608">608 x 608</option>
            </select>
            <label>Input Size</label>
          </div>
          <div class="row">
            <label for="scoreThreshold">Score Threshold:</label>
            <input disabled value="0.5" id="scoreThreshold" type="text" class="bold">
          </div>
          <button
            class="waves-effect waves-light btn"
            onclick="onDecreaseScoreThreshold()"
          >
            <i class="material-icons left">-</i>
          </button>
          <button
            class="waves-effect waves-light btn"
            onclick="onIncreaseScoreThreshold()"
          >
            <i class="material-icons left">+</i>
          </button>
        </div>
      </span>
  <!-- tiny_face_detector_controls -->

  <!-- mtcnn_controls -->
  <span id="mtcnn_controls">
        <div class="row side-by-side">
          <div class="row">
            <label for="minFaceSize">Minimum Face Size:</label>
            <input disabled value="20" id="minFaceSize" type="text" class="bold">
          </div>
          <button
            class="waves-effect waves-light btn"
            onclick="onDecreaseMinFaceSize()"
          >
            <i class="material-icons left">-</i>
          </button>
          <button
            class="waves-effect waves-light btn"
            onclick="onIncreaseMinFaceSize()"
          >
            <i class="material-icons left">+</i>
          </button>
        </div>
      </span>
  <!-- mtcnn_controls -->

</div>
  <% if request.get? %>



    <form id="visitor_sign_form" autocomplete="off" method="post">
      <div class="form-group">

        <div id="capture_photo">
          <h1><a href='/'> <img class="smlogo" src="/images/microhealth-logo.svg" /></a></h1>
          <h2 class="recognize_instructions">Photo</h2>
          <div class="complete_msg" id="capture_complete_msg">Must complete form!</div>
          <div class="row">
            <div class="col-xs-12 col-sm-12" id="hidden_imgs" hidden>

              <% Visitor.init_vvi.where.not(avatar:nil).where(visitor_visit_informations: {sign_out_date: nil}).where("visitor_visit_informations.sign_in_date >= ?", 1.day.ago).order('visitor_visit_informations.id DESC').each do |v| %>
                <img class="inputImg" id="inputImg" src='<%= v.avatar %>' data-label="<%= v.email%>"/>
              <% end %>
              <canvas id="overlay" />
            </div>
            <div class="col-xs-12 col-sm-12" >

              <h3 style="margin: auto;text-align: center; align-content: center;font-size: 40px">Take a picture first</h3>

              <div id="person_image_camera" style="width: 300px;height: 270px; overflow: hidden; margin: auto"> </div>
              <div id="person_image" style="width: 300px;height: 270px; margin: auto; overflow: hidden" hidden> </div>
              <%= image_tag 'loading.gif', id: 'loading', style: 'width: 50px;   position: absolute; top: 46px;    right: 29%; display: none' %>
            </div>
          </div>
          <div class="row" id="email_row" hidden>
            <div class="col-xs-12 col-sm-3 col-md-2">
              <label for="capture_person_name">Email:</label>
            </div>
            <div class="col-xs-12 col-sm-9 col-md-10">
              <input type="text" class="form-control" id="capture_person_name" name="name">
            </div>
            <div class="col-xs-12">
              <p><span id="capture_person_msg"></span></p>
            </div>
          </div>

          <div class="buttonrow" >
            <a href="/" > <button class="btn btn-warning" > Cancel</button></a>
            <button id="capture_next_btn" class="btn btn-success" style="display: none;">Next</button>
          </div>
        </div><!-- capture_photo  -->
      </div>
    </form>
    <script>
        var labels = null
        var label = null
        var faceMatchers = null
        var descriptor = null
        var retries = 0;
        /* TODO add processing */
        async function updateQueryImageResults() {
            retries++;
            $('#loading').show()
            canvas = $('#overlay').get(0);
            results = await faceapi.detectAllFaces($('#inputImgq').get(0), getFaceDetectorOptions()).withFaceLandmarks().withFaceDescriptors();
            if(results.length > 0)
            {
                resizedResults = resizeCanvasAndResults($('#inputImgq').get(0), canvas, results)
                descriptor = resizedResults[0].descriptor;
                if (faceMatchers) { await fetch_matcher(); }
                else{ await populate_and_fetch_matcher(); }
            }
            else
            {
                if( retries < 3)
                {
                    alert('We did not detect your face. please try again')
                    $( '#person_image' ).hide()
                    $('#person_image_camera').show();
                }
                else
                {
                    alert('Your face was not recognized. Please enter your email in the box below.')
                    $('#email_row').show()
                    $('#capture_next_btn').show()
                }
            }
            $('#loading').hide()
        }
        async function fetch_matcher(){
            found = false;
            for(i=0; i<faceMatchers.length;i++)
            {
                faceMatcher = faceMatchers[i];
                found = drawFaceRecognitionResults()
                if(found)
                    break;
            }
            if(!found)
            {
                alert('Your face was not recognized. Please enter your email in the box below.')
                $('#email_row').show()
                $('#capture_next_btn').show()
            }
        }
        async function populate_and_fetch_matcher(){
            faceMatchers = []
            labels = [];
            found = false
            console.log('time = '+ (new Date().getTime() / 1000))
            timer = new Date().getTime()
            for(i=0; i< $('.inputImg').length; i++) {
                if (new Date().getTime() - timer < 20000){
                    if (!found) {
                        try{
                            imgEl = $('.inputImg').get(i)
                            label = $(imgEl).data('label')
                            const fullFaceDescriptions = await
                            faceapi.detectAllFaces(imgEl, getFaceDetectorOptions()).withFaceLandmarks().withFaceDescriptors()
                            if (fullFaceDescriptions.length) {
                                faceMatcher = new faceapi.FaceMatcher(fullFaceDescriptions, 0.5)
                                faceMatcher.labeledDescriptors[0]['_label'] = label
                                faceMatchers.push(faceMatcher)
                                found = drawFaceRecognitionResults();
                            }
                        }
                        catch(err)
                        {
                        }
                    }
                }
                else {
                    break;
                }
            }
            console.log(' FINSIH time = '+ (new Date().getTime() / 1000))
            if(!found)
            {
                console.log('time = '+ (new Date().getTime() / 1000))
                alert('Your face was not recognized. Please enter your email in the box below.')
                $('#email_row').show()
                $('#capture_next_btn').show()
            }
        }
        async function test(imgEl) {
            console.log('time = '+ (new Date().getTime() / 1000))
            try{
                l = $(imgEl).data('label')
                const fullFaceDescriptions = await
                faceapi.detectAllFaces(imgEl, getFaceDetectorOptions()).withFaceLandmarks().withFaceDescriptors()
                if (fullFaceDescriptions.length) {
//                      labels.push(l)
                    fm = new faceapi.FaceMatcher(fullFaceDescriptions, 0.5)
                    for (j = 0; j < fm.labeledDescriptors.length; j++) {
                        fm.labeledDescriptors[j]['_label'] = l
                    }
                    faceMatchers.push(fm)
                    found = drawFaceRecognitionResults(fm);
                }
            }
            catch(err)
            {
            }
        }
        function drawFaceRecognitionResults() {
            f = false
            best_match = faceMatcher.findBestMatch(descriptor).toString();
            label = faceMatcher.labeledDescriptors[0]['_label']
            if(best_match.indexOf(label) >= 0)
            {
                f = true;
                $('#capture_person_name').val(label)
                $('#email_row').show();
                $('#capture_next_btn').show();
            }
            return(f)
        }
        async function run() {
            await changeFaceDetector(selectedFaceDetector)
            await faceapi.loadFaceLandmarkModel('/')
            await faceapi.loadFaceRecognitionModel('/')
        }
        function initWebCam() {
            picked_photo = false;
            // init_face_api()
            $("#signin_capture_msg").show();
            $("#signin_check_visit").show();
            $("#signout_capture_msg").hide();
            iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream
            if (iOS) {
                var width = 320;
                var height = 240;
                if(screen.width < screen.height) {
                    width = 240;
                    height = 320;
                }
                Webcam.set({
                    constraints: { facingMode: { exact: "user" }  },
                    width: width,
                    height: height,
                    dest_width: width,
                    dest_height: height,
                    crop_width: width,
                    crop_height: height,
                    image_format: 'jpeg',
                    jpeg_quality: 90,
                    user_callback: function (data_uri) {
                        document.getElementById('person_image').innerHTML = '<img id="inputImgq" src="' + data_uri + '"/>';
                        $('#person_image_camera').hide();
                        $('#person_image').show();
                        picked_photo = true;
                        updateQueryImageResults();
                    }
                });
            }
            else {
                Webcam.set({
                    width: 320,
                    height: 240,
                    image_format: 'jpeg',
                    jpeg_quality: 90
                });
                $('#person_image_camera').on('click', function () {
                    $('#person_image_camera').hide()
                    Webcam.snap(function (data_uri) {
                        // display results in page
                        document.getElementById('person_image').innerHTML = '<img  id="inputImgq" src="' + data_uri + '"/>';
                        picked_photo = true;
                    });
                    $('#person_image').show();
                    updateQueryImageResults()
                })
            }
            Webcam.attach('#person_image_camera');
            $("#capture_photo").show();
        }
        $(document).ready(function() {
            initFaceDetectionControls()
            run();
            initWebCam()
            if(iOS)
            {
                // $('.webcamjs-ios-text').css('position', 'absolution')
                $('.webcamjs-ios-text').html("CLICK ME")
                // $('#open_picture').trigger('click')
            }
        })
    </script>
    <script src="/js/webcam.min.js" type="text/javascript"></script>
    <script src="/js/face-api.js"></script>
    <script src="/js/commons.js"></script>
    <script src="/js/drawing.js"></script>
    <script src="/js/faceDetectionControls.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.100.2/js/materialize.min.js"></script>

    <script>
        $(document).ready(function(){
            $(document).keypress(function(e) {
                var keycode = (e.keyCode ? e.keyCode : e.which);
                if (keycode == '13') {
                    $('#capture_next_btn').trigger('click')
                }
            });
        })
    </script>
  <% else %>
    <!-- ********************************************************************************************  -->
    <div id="visit_summary">
      <h1><a href='/'> <img class="smlogo" src="/images/microhealth-logo.svg" /></a></h1>
      <h2>Visit Summary</h2>
      <div id="missed_signout_msg">You forgot to sign out of your last visit. Please sign out before signing in.</div>

      <div class="row firstelement">
        <div class="col-xs-4 col-sm-4 col-md-3" id="display_photo_div">
          <img src="<%= @visitor.avatar %>" width="250px" style="float: left"/>
        </div>
        <div class="col-xs-8 col-sm-8 col-md-9" id="person_info" >
          <table style="float: right;">
            <tr>
              <td>Name:</td><td><span id="display_name"><%= @visitor.name %></span></td>
            </tr>
            <tr>
              <td>Company:</td><td><span id="display_company"><%= @visitor.company.try(:name) %></span></td>
            </tr>
            <tr>
              <td>Phone:</td><td><span id="display_phone"><%= @visitor.phone %></span></td>
            </tr>
            <tr>
              <td>Email:</td><td><span id="display_email"><%= @visitor.email %></span></td>
            </tr>
            <tr>
              <td>Visit Reason:</td><td><span id="display_reason"><%= @visitor.last_visit.visit_reason %></span></td>
            </tr>
            <tr>
              <td>Person Visiting:&nbsp;&nbsp;&nbsp;</td><td><span id="display_personvisit"><%= @visitor.last_visit.person.try(:name) %></span></td>
            </tr>
            <tr>
              <td>US Citizen:</td><td><span id="display_citizen"><%= @visitor.us_citizen? %></span></td>
            </tr>
            <tr>
              <td>Classified:</td><td><span id="display_classified"><%= @visitor.last_visit.classified? %></span></td>
            </tr>
          </table>
        </div>
      </div>

      <div class="row" id="display_date_div">
        <div class="col-xs-12 col-sm-6">
          <p>Date: <span id="display_date_in"><%= @visitor.last_visit.sign_in_date.try(:sign_in_date) %></span></p>
        </div>
        <div class="col-xs-12 col-sm-6">
          <p>Time In: <span id="display_time_in"><%= @visitor.last_visit.strftime('%I:%M %p') rescue nil%></span></p>
        </div>
      </div>

      <div class="buttonrow">
        <%= link_to 'Back', root_path, class: "btn btn-info" %>
        <%= link_to 'Sign Out', visitor_signout_path(visitor_id: @visitor.id), class: "btn btn-success" %>
      </div>

    </div>

  <% end %>
</div>
<style>
  .webcamjs-ios-text{
    position: absolute;
    left: 45%;
    bottom: 35px;
  }
  .webcamjs-ios-placeholder
  {
    background-image: url('/images/camera.png');
  }
</style>
